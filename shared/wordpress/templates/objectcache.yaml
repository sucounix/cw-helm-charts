{{- if .Values.objectcache.enabled -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: objectcache
  labels:
  {{- range $key, $value := .Values.wordpress.labels }}
    {{ $key }}: {{ $value | quote }}
  {{- end }}
    app: {{ template "wordpress.fullname" . }}
    version: {{ $.Chart.Version | quote }}
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    {{- range $key, $value := .Values.wordpress.annotations }}
      {{ $key }}: {{ $value | quote }}
    {{- end }}
spec:
  template:
    metadata:
      name: objectcache
      labels:
        app: {{ template "wordpress.fullname" . }}
    spec:
      restartPolicy: Never
      shareProcessNamespace: true
      serviceAccountName: {{ template "wordpress.fullname" . }}
      volumes:
      - name: wordpress-persistent-storage
        persistentVolumeClaim:
          claimName: {{ template "wordpress.fullname" . }}
      initContainers:
      - name: wait
        image: groundnuty/k8s-wait-for:v1.3
        imagePullPolicy: Always
        args:
          - "pod"
          - "-lapp={{ template "wordpress.fullname" . }},tier=app"
        resources:
          requests:
            memory: {{ .Values.cloudsql.resources.memory }}
            cpu: {{ .Values.cloudsql.resources.cpu }}
      containers:
      - name: objectcache
        image: "{{ .Values.objectcache.imageName }}:{{ .Values.objectcache.imageTag }}"
        imagePullPolicy: Always
        args:
        - "wp_plugin_ocp_install.sh"
        env:
        - name: K8S_NAMESPACE
          value: "{{ .Release.Namespace }}"
        - name: REDIS_K8S_SERVICE_NAME
          value: "{{ template "wordpress.fullname" . }}-redis-master"
        - name: WORDPRESS_DB_HOST
          valueFrom:
            secretKeyRef:
              name: secret-{{ template "wordpress.fullname" . }}-db
              key: host
        - name: WORDPRESS_DB_USER
          valueFrom:
            secretKeyRef:
              name: secret-{{ template "wordpress.fullname" . }}-db
              key: user
        - name: WORDPRESS_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: secret-{{ template "wordpress.fullname" . }}-db
              key: password
        - name: WORDPRESS_DB_NAME
          valueFrom:
            secretKeyRef:
              name: secret-{{ template "wordpress.fullname" . }}-db
              key: db
        envFrom:
        - configMapRef:
            name: wordpress-options-configmap
        volumeMounts:
        - name: wordpress-persistent-storage
          mountPath: /var/www/vhosts/localhost/html/public_html/
        resources:
          requests:
            memory: {{ .Values.sshd.resources.requests.memory }}
            cpu: {{ .Values.sshd.resources.requests.cpu }}
          limits:
            memory: {{ .Values.sshd.resources.limits.memory }}
            cpu: {{ .Values.sshd.resources.limits.cpu }}
      - name: cloud-sql-proxy
        image: {{ .Values.cloudsql.image }}
        command:
        - "/cloud_sql_proxy"
        - "-ip_address_types=PRIVATE"
        - "-instances={{ get (get .Values.cloudsql.connectionName .Values.env) .Values.region }}=tcp:3306"
        securityContext:
          runAsNonRoot: true
        resources:
          requests:
            memory: {{ .Values.cloudsql.resources.memory }}
            cpu: {{ .Values.cloudsql.resources.cpu }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: objectcache
rules:
  - apiGroups:
      - ""
    verbs:
      - "watch"
      - "list"
      - "get"
    resources:
      - pods
      - services
      - deployments
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: objectcache
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: objectcache
subjects:
  - kind: ServiceAccount
    name: {{ template "wordpress.fullname" . }}
{{- end }}
